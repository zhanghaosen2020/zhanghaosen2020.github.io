"""
问：为什么需要元组？
答：列表是可以修改的，如果想要传递的信息，不被篡改，列表就不合适了且元组和列表一样，
    都是可以封装多个、不同类型的元素在内，但最大不同在于，元组一旦定义完成，就不可以修改。
    所以，当我们需要在程序内封装数据又不希望封装的数据被篡改那么元组就非常合适了 。
元组定义：元组定义使用小括号，且使用逗号隔开各个数据，数据可以是不同的数据类型。
"""
# 定义元组
(1,"hello","True") # 字面量
t1 = (1,"hello",True)

t2 = () # 定义空元组，方法1
t3 = tuple() # 定义空元组，方法2
print(f"t1的类型是：{type(t1)},内容是：{t1}")
print(f"t2的类型是：{type(t1)},内容是：{t2}")
print(f"t3的类型是：{type(t1)},内容是：{t3}")

# 定义单个元素的元组
t4 = ("hello")
print(f"t4的类型是：{type(t4)},内容是：{t4}")

t4 = ("hello",) # 注意，定义一个单一元素时，必须带有逗号，否则就不是元组类型
print(f"t4的类型是：{type(t4)},内容是：{t4}")

# 因为元组的元素类容不限制，所以元组也支持嵌套
# 定义一个嵌套元组
t5 = ((1,2,3),(4,5,6))
print(f"t5的类型是：{type(t5)},内容是：{t5}")

# 下标索引去取内容
num = t5[1][2]
print(f"从嵌套元组中取出的数据为：{num}")

# 元组的操作：index查找方法
t6 = ("教育","程序员","Python")
index = t6.index("程序员")
print(f"在元组t6中查找，程序员的下标是：{index}")

# 元组的操作：count统计方法
t7 = ("教育","程序员","程序员","程序员","Python")
num = t7.count("程序员")
print(f"在t7元组中统计程序员的数量有：{num}个")

# 元组的操作:len函数统计元组元素数量
t8 = ("教育","程序员","程序员","程序员","Python")
num = len(t8)
print(f"在t8中总共的元素数量是：{num}个")

# 元组的遍历：while
index = 0
while index < len(t8):
    print(f"t8中的元素有：{t8[index]}")
    index += 1

# 元组的遍历：for
for i in t8:
    print(f"t8中的元素有：{i}")

# 尝试修改元组内容，修改后会直接报错
# 但是有一个特例，就是元组中嵌套list列表list中的可以修改
t9 = (1,2,["it","heima"])
print(f"t9中的元素有：{t9}")
t9[2][0] = "黑马"
t9[2][1] = "哈哈"
print(f"t9中的元素有：{t9}")

