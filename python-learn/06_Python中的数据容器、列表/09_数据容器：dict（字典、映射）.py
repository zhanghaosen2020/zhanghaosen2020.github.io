"""
字典的定义：生活中的字典通过字去找到其字的含义，字相当于一个关键key
            python便是通过key去找到key对应的Value值
            一份成绩单定义了学生姓名和学生成绩
            通过学生姓名检索学生的成绩，便需要字典
字典的相关操作
"""
# 字典的定义 {}里边存储 键值对
my_dict1 = {"王力宏":99 ,"周杰伦":88,"林俊杰":77} # 字典不允许key的重复，后边的会覆盖前边的

# 定义空字典
my_dict2 = {} # 第1种
my_dict3 = dict() #第2中
print(f"字典1的内容是：{my_dict1}，类型是：{type(my_dict1)}")
print(f"字典2的内容是：{my_dict2}，类型是：{type(my_dict2)}")
print(f"字典3的内容是：{my_dict3}，类型是：{type(my_dict3)}")

# 定义重复key的字典（不允许）
# my_dict1 = {"王力宏":99 ,"王力宏":88,"林俊杰":77}
# 字典不允许key的重复，后边的会覆盖前边的


# 从字典中基于key获取Value
# 字典同集合一样，不可以使用下标索引，但是字典可以通过key值来取得对应的Value
my_dict1 = {"王力宏":99 ,"周杰伦":88,"林俊杰":77}
score = my_dict1["王力宏"]
print(f"王力宏的考试分数是：{score}")

# 字典的嵌套
"""
字典的Key和Value也可以是任意数据类型（Key不可以为字典）
那么，就表明字典是可以嵌套的
"""
stu_score_dict = {
    "王力宏":{
        "语文":77,
        "数学":66,
        "英语":33,
    },"周杰伦":{
        "语文":88,
        "数学":86,
        "英语":55,
    },"林俊杰":{
        "语文":90,
        "数学":60,
        "英语":90,
    }
}
print(f"学生的考试信息为：{stu_score_dict}")
# 从嵌套字典中获取信息
# 看周杰伦信息
score = stu_score_dict["周杰伦"]["数学"]
print(f"周杰伦的数学成绩为：{score}")
